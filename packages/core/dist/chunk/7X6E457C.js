import { a as a$2 } from './B6YIKRNF.js';
import { a as a$3 } from './3LFQJS72.js';
import { a as a$4 } from './STCLCRSQ.js';
import { a as a$1 } from './2B777EKY.js';
import { a } from './JSKF3YHK.js';
import { createComponent, mergeProps, memo } from 'solid-js/web';
import { mergeDefaultProps, mergeRefs, createGenerateId, callHandler } from '@kobalte/utils';
import { createContext, useContext, createSignal, splitProps, onMount, onCleanup, createEffect, on, Show, createUniqueId, createMemo } from 'solid-js';
import { combineStyle } from '@solid-primitives/props';
import H from 'solid-presence';

var ee={};a(ee,{Collapsible:()=>Z,Content:()=>b,Root:()=>h,Trigger:()=>x,useCollapsibleContext:()=>s});var u=createContext();function s(){let n=useContext(u);if(n===void 0)throw new Error("[kobalte]: `useCollapsibleContext` must be used within a `Collapsible.Root` component");return n}function b(n){let[e,a]=createSignal(),t=s(),l=mergeDefaultProps({id:t.generateId("content")},n),[r,d]=splitProps(l,["ref","id","style"]),{present:o}=H({show:t.shouldMount,element:()=>e()??null}),[p,f]=createSignal(0),[m,M]=createSignal(0),O=(()=>t.isOpen()||o())();return onMount(()=>{let i=requestAnimationFrame(()=>{O=!1;});onCleanup(()=>{cancelAnimationFrame(i);});}),createEffect(on(o,()=>{if(!e())return;e().style.transitionDuration="0s",e().style.animationName="none";let i=e().getBoundingClientRect();f(i.height),M(i.width),O||(e().style.transitionDuration="",e().style.animationName="");})),createEffect(on(t.isOpen,i=>{!i&&e()&&(e().style.transitionDuration="",e().style.animationName="");},{defer:!0})),createEffect(()=>onCleanup(t.registerContentId(r.id))),createComponent(Show,{get when(){return o()},get children(){return createComponent(a$1,mergeProps({as:"div",ref(i){let P=mergeRefs(a,r.ref);typeof P=="function"&&P(i);},get id(){return r.id},get style(){return combineStyle({"--kb-collapsible-content-height":p()?`${p()}px`:void 0,"--kb-collapsible-content-width":m()?`${m()}px`:void 0},r.style)}},()=>t.dataset(),d))}})}function h(n){let e=`collapsible-${createUniqueId()}`,a=mergeDefaultProps({id:e},n),[t,l]=splitProps(a,["open","defaultOpen","onOpenChange","disabled","forceMount"]),[r,d]=createSignal(),o=a$2({open:()=>t.open,defaultOpen:()=>t.defaultOpen,onOpenChange:m=>t.onOpenChange?.(m)}),p=createMemo(()=>({"data-expanded":o.isOpen()?"":void 0,"data-closed":o.isOpen()?void 0:"","data-disabled":t.disabled?"":void 0})),f={dataset:p,isOpen:o.isOpen,disabled:()=>t.disabled??!1,shouldMount:()=>t.forceMount||o.isOpen(),contentId:r,toggle:o.toggle,generateId:createGenerateId(()=>l.id),registerContentId:a$3(d)};return createComponent(u.Provider,{value:f,get children(){return createComponent(a$1,mergeProps({as:"div"},p,l))}})}function x(n){let e=s(),[a,t]=splitProps(n,["onClick"]);return createComponent(a$4,mergeProps({get"aria-expanded"(){return e.isOpen()},get"aria-controls"(){return memo(()=>!!e.isOpen())()?e.contentId():void 0},get disabled(){return e.disabled()},onClick:r=>{callHandler(r,a.onClick),e.toggle();}},()=>e.dataset(),t))}var Z=Object.assign(h,{Content:b,Trigger:x});

export { s as a, b, h as c, x as d, Z as e, ee as f };
