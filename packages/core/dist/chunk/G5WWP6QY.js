import { a as a$1 } from './2B777EKY.js';
import { a } from './JSKF3YHK.js';
import { createComponent, memo, mergeProps } from 'solid-js/web';
import { createContext, useContext, createSignal, createEffect, onCleanup, Show, on, splitProps } from 'solid-js';

var O={};a(O,{Fallback:()=>g,Image:()=>j,Img:()=>l,Root:()=>p,useImageContext:()=>s});var c=createContext();function s(){let o=useContext(c);if(o===void 0)throw new Error("[kobalte]: `useImageContext` must be used within an `Image.Root` component");return o}function g(o){let t=s(),[a,r]=createSignal(t.fallbackDelay()===void 0);return createEffect(()=>{let e=t.fallbackDelay();if(e!==void 0){let n=window.setTimeout(()=>r(!0),e);onCleanup(()=>window.clearTimeout(n));}}),createComponent(Show,{get when(){return memo(()=>!!a())()&&t.imageLoadingStatus()!=="loaded"},get children(){return createComponent(a$1,mergeProps({as:"span"},o))}})}function l(o){let t=s(),[a,r]=createSignal("idle");return createEffect(on(()=>o.src,e=>{if(!e){r("error");return}let n=!0,m=new window.Image,u=x=>()=>{n&&r(x);};r("loading"),m.onload=u("loaded"),m.onerror=u("error"),m.src=e,onCleanup(()=>{n=!1;});})),createEffect(()=>{let e=a();e!=="idle"&&t.onImageLoadingStatusChange(e);}),createComponent(Show,{get when(){return a()==="loaded"},get children(){return createComponent(a$1,mergeProps({as:"img"},o))}})}function p(o){let[t,a]=splitProps(o,["fallbackDelay","onLoadingStatusChange"]),[r,e]=createSignal("idle"),n={fallbackDelay:()=>t.fallbackDelay,imageLoadingStatus:r,onImageLoadingStatusChange:m=>{e(m),t.onLoadingStatusChange?.(m);}};return createComponent(c.Provider,{value:n,get children(){return createComponent(a$1,mergeProps({as:"span"},a))}})}var j=Object.assign(p,{Fallback:g,Img:l});

export { s as a, g as b, l as c, p as d, j as e, O as f };
