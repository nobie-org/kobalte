import { access, createMediaQuery } from '@kobalte/utils';
import { mergeProps, createSignal, createMemo, createEffect, on, onCleanup } from 'solid-js';
import { isServer } from 'solid-js/web';

var J={beforeEnter:"out",enter:"in",afterEnter:"in",beforeExit:"in",exit:"out",afterExit:"out"};function m(n){let r={"transition-duration":`${n.duration}ms`,"transition-timing-function":n.easing};return {"transition-property":O(n.transition),...r,...n.transition.common,...n.transition[J[n.phase]]}}function O(n){return [...new Set([...Object.keys(n.in),...Object.keys(n.out)])].join(", ")}var E=250,d=10,g="ease";function U(n,r){let t=mergeProps({duration:E,delay:d,easing:g,get exitDuration(){return access(r).duration||E},get exitDelay(){return access(r).delay||d},get exitEasing(){return access(r).easing||g}},r),s=createMediaQuery("(prefers-reduced-motion: reduce)"),[x,l]=createSignal(s()?0:access(t).duration),[f,o]=createSignal(access(n)?"afterEnter":"afterExit"),[A,P]=createSignal(access(t).easing),a=-1,b=i=>{let S=i?access(t).onBeforeEnter:access(t).onBeforeExit,p=i?access(t).onAfterEnter:access(t).onAfterExit;o(i?"beforeEnter":"beforeExit"),window.clearTimeout(a);let u=l(s()?0:i?access(t).duration:access(t).exitDuration);if(P(i?access(t).easing:access(t).exitEasing),u===0){S?.(),p?.(),o(i?"afterEnter":"afterExit");return}let y=s()?0:i?access(t).delay:access(t).exitDelay,C=window.setTimeout(()=>{S?.(),o(i?"enter":"exit");},y);a=window.setTimeout(()=>{window.clearTimeout(C),p?.(),o(i?"afterEnter":"afterExit");},y+u);},D=createMemo(()=>m({transition:access(t).transition,duration:x(),phase:f(),easing:A()})),w=createMemo(()=>f()!=="afterExit");return createEffect(on(()=>access(n),i=>b(i),{defer:!0})),onCleanup(()=>{isServer||window.clearTimeout(a);}),{keepMounted:w,style:D}}

export { U as a };
