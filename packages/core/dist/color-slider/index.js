import { d as d$1, g, e as e$1, c, a as a$4, f } from '../chunk/4B7DA7C7.js';
export { d as Input, g as ValueLabel } from '../chunk/4B7DA7C7.js';
import { a as a$2, b } from '../chunk/Q73XX7CS.js';
import { a as a$1 } from '../chunk/PXHAVOZL.js';
export { a as Label } from '../chunk/PXHAVOZL.js';
import { a } from '../chunk/DBH56JRW.js';
export { a as ErrorMessage } from '../chunk/DBH56JRW.js';
import { e } from '../chunk/63IHFG6C.js';
export { e as Description } from '../chunk/63IHFG6C.js';
import { g as g$1 } from '../chunk/UAI26547.js';
import { a as a$3 } from '../chunk/BRRMFPGI.js';
import { createComponent, mergeProps } from 'solid-js/web';
import { mergeDefaultProps } from '@kobalte/utils';
import { createContext, useContext, createUniqueId, splitProps, createMemo } from 'solid-js';
import { combineStyle } from '@solid-primitives/props';

var d=createContext();function u(){let n=useContext(d);if(n===void 0)throw new Error("[kobalte]: `useColorSliderContext` must be used within a `ColorSlider.Root` component");return n}function M(n){let o=`colorslider-${createUniqueId()}`,t=mergeDefaultProps({id:o,translations:a$2,defaultValue:b("hsl(0, 100%, 50%)")},n),[e,i]=splitProps(t,["value","defaultValue","onChange","onChangeEnd","channel","colorSpace","getValueLabel","translations"]),[a,m]=a$3({value:()=>e.value,defaultValue:()=>e.defaultValue,onChange:c=>e.onChange?.(c)}),r=createMemo(()=>e.colorSpace?a().toFormat(e.colorSpace):a()),l=c=>{m(r().withChannelValue(e.channel,c[0]));},s=c=>{e.onChangeEnd?.(r().withChannelValue(e.channel,c[0]));},h=createMemo(()=>e.getValueLabel?e.getValueLabel(r()):r().formatChannelValue(e.channel)),p=createMemo(()=>{switch(e.channel){case"hue":return b(`hsl(${r().getChannelValue("hue")}, 100%, 50%)`);case"lightness":case"brightness":case"saturation":case"red":case"green":case"blue":return r().withChannelValue("alpha",1);case"alpha":return r();default:throw new Error(`Unknown color channel: ${e.channel}`)}}),C={value:r,channel:()=>e.channel,getDisplayColor:p,translations:()=>e.translations};return createComponent(d.Provider,{value:C,get children(){return createComponent(e$1,mergeProps({get value(){return [r().getChannelValue(e.channel)]},onChange:l,onChangeEnd:s,getValueLabel:h},()=>r().getChannelRange(e.channel),i))}})}function R(n){let o=u(),[t,e]=splitProps(n,["style"]),i=createMemo(()=>{let a=o.value()?.formatChannelValue(o.channel());return o.channel()==="hue"?`${a}, ${o.getDisplayColor().getHueName(o.translations())}`:o.channel()!=="alpha"?`${a}, ${o.getDisplayColor().getColorName(o.translations())}`:a});return createComponent(c,mergeProps({get style(){return combineStyle({"forced-color-adjust":"none","--kb-color-current":o.value().toString()},t.style)},get"aria-valuetext"(){return i()}},e))}function _(n){let o=a$4(),t=u(),[e,i]=splitProps(n,["style"]),{direction:a}=g$1(),m=createMemo(()=>{let r;switch(o.state.orientation()==="vertical"?r="top":a()==="ltr"?r="right":r="left",t.channel()){case"hue":{let l=[0,60,120,180,240,300,360].map(s=>t.getDisplayColor().withChannelValue("hue",s).toString("css")).join(", ");return `linear-gradient(to ${r}, ${l})`}case"lightness":{let l=o.state.getThumbMinValue(0),s=o.state.getThumbMaxValue(0),h=t.getDisplayColor().withChannelValue(t.channel(),l).toString("css"),p=t.getDisplayColor().withChannelValue(t.channel(),(s-l)/2).toString("css"),C=t.getDisplayColor().withChannelValue(t.channel(),s).toString("css");return `linear-gradient(to ${r}, ${h}, ${p}, ${C})`}case"saturation":case"brightness":case"red":case"green":case"blue":case"alpha":{let l=t.getDisplayColor().withChannelValue(t.channel(),o.state.getThumbMinValue(0)).toString("css"),s=t.getDisplayColor().withChannelValue(t.channel(),o.state.getThumbMaxValue(0)).toString("css");return `linear-gradient(to ${r}, ${l}, ${s})`}default:throw new Error(`Unknown color channel: ${t.channel()}`)}});return createComponent(f,mergeProps({get style(){return combineStyle({"forced-color-adjust":"none",background:m()},e.style)}},i))}var De=Object.assign(M,{Description:e,ErrorMessage:a,Input:d$1,Label:a$1,Thumb:R,Track:_,ValueLabel:g});

export { De as ColorSlider, M as Root, R as Thumb, _ as Track, u as useColorSliderContext };
