import{a as H,b as u}from"../chunk/WZF3RE4B.jsx";import{a as O,c as M,d as v,e as D,f as $,g as F}from"../chunk/IAKJOQ4E.jsx";import"../chunk/Z74EZM6S.jsx";import"../chunk/YU3BENDD.jsx";import{a as L}from"../chunk/MYEAQNC4.jsx";import"../chunk/RQL65DCQ.jsx";import{a as R}from"../chunk/27VXZQWW.jsx";import{e as V}from"../chunk/HIUHMFLS.jsx";import"../chunk/5IMLYAJ7.jsx";import{g as E}from"../chunk/ZSYY5OQU.jsx";import"../chunk/EJ5I5XML.jsx";import"../chunk/LD6VFCOU.jsx";import{a as T}from"../chunk/A5YUKSV6.jsx";import"../chunk/DOLTULMA.jsx";import"../chunk/HAEWETXL.jsx";import"../chunk/XWCF3RNR.jsx";import{mergeDefaultProps as U}from"@kobalte/utils";import{createMemo as P,createUniqueId as q,splitProps as _}from"solid-js";import{createContext as J,useContext as X}from"solid-js";var h=J();function C(){let t=X(h);if(t===void 0)throw new Error("[kobalte]: `useColorSliderContext` must be used within a `ColorSlider.Root` component");return t}function A(t){let e=`colorslider-${q()}`,r=U({id:e,translations:H,defaultValue:u("hsl(0, 100%, 50%)")},t),[o,i]=_(r,["value","defaultValue","onChange","onChangeEnd","channel","colorSpace","getValueLabel","translations"]),[n,d]=T({value:()=>o.value,defaultValue:()=>o.defaultValue,onChange:p=>o.onChange?.(p)}),l=P(()=>o.colorSpace?n().toFormat(o.colorSpace):n()),a=p=>{d(l().withChannelValue(o.channel,p[0]))},s=p=>{o.onChangeEnd?.(l().withChannelValue(o.channel,p[0]))},m=P(()=>o.getValueLabel?o.getValueLabel(l()):l().formatChannelValue(o.channel)),c=P(()=>{switch(o.channel){case"hue":return u(`hsl(${l().getChannelValue("hue")}, 100%, 50%)`);case"lightness":case"brightness":case"saturation":case"red":case"green":case"blue":return l().withChannelValue("alpha",1);case"alpha":return l();default:throw new Error(`Unknown color channel: ${o.channel}`)}}),S={value:l,channel:()=>o.channel,getDisplayColor:c,translations:()=>o.translations};return<h.Provider value={S}><D value={[l().getChannelValue(o.channel)]}onChange={a}onChangeEnd={s}getValueLabel={m}{...l().getChannelRange(o.channel)}{...i}/></h.Provider>}import{combineStyle as z}from"@solid-primitives/props";import{createMemo as B,splitProps as G}from"solid-js";function N(t){let e=C(),[r,o]=G(t,["style"]),i=B(()=>{let n=e.value()?.formatChannelValue(e.channel());return e.channel()==="hue"?`${n}, ${e.getDisplayColor().getHueName(e.translations())}`:e.channel()!=="alpha"?`${n}, ${e.getDisplayColor().getColorName(e.translations())}`:n});return<M style={z({"forced-color-adjust":"none","--kb-color-current":e.value().toString()},r.style)}aria-valuetext={i()}{...o}/>}import{combineStyle as K}from"@solid-primitives/props";import{createMemo as Q,splitProps as W}from"solid-js";function j(t){let e=O(),r=C(),[o,i]=W(t,["style"]),{direction:n}=E(),d=Q(()=>{let l;switch(e.state.orientation()==="vertical"?l="top":n()==="ltr"?l="right":l="left",r.channel()){case"hue":{let a=[0,60,120,180,240,300,360].map(s=>r.getDisplayColor().withChannelValue("hue",s).toString("css")).join(", ");return`linear-gradient(to ${l}, ${a})`}case"lightness":{let a=e.state.getThumbMinValue(0),s=e.state.getThumbMaxValue(0),m=r.getDisplayColor().withChannelValue(r.channel(),a).toString("css"),c=r.getDisplayColor().withChannelValue(r.channel(),(s-a)/2).toString("css"),S=r.getDisplayColor().withChannelValue(r.channel(),s).toString("css");return`linear-gradient(to ${l}, ${m}, ${c}, ${S})`}case"saturation":case"brightness":case"red":case"green":case"blue":case"alpha":{let a=r.getDisplayColor().withChannelValue(r.channel(),e.state.getThumbMinValue(0)).toString("css"),s=r.getDisplayColor().withChannelValue(r.channel(),e.state.getThumbMaxValue(0)).toString("css");return`linear-gradient(to ${l}, ${a}, ${s})`}default:throw new Error(`Unknown color channel: ${r.channel()}`)}});return<$ style={K({"forced-color-adjust":"none",background:d()},o.style)}{...i}/>}var xo=Object.assign(A,{Description:V,ErrorMessage:R,Input:v,Label:L,Thumb:N,Track:j,ValueLabel:F});export{xo as ColorSlider,V as Description,R as ErrorMessage,v as Input,L as Label,A as Root,N as Thumb,j as Track,F as ValueLabel,C as useColorSliderContext};
